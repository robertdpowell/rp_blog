<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.6.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-02-15T22:19:20+00:00</updated><id>http://localhost:4000/</id><entry><title type="html">The Coaching Habit</title><link href="http://localhost:4000/The-Coaching-Habit/" rel="alternate" type="text/html" title="The Coaching Habit" /><published>2020-12-20T00:00:00+00:00</published><updated>2020-12-20T00:00:00+00:00</updated><id>http://localhost:4000/The Coaching Habit</id><content type="html" xml:base="http://localhost:4000/The-Coaching-Habit/">&lt;h4 id=&quot;coaching-questions&quot;&gt;COACHING QUESTIONS&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;“What’s on your mind?”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“And what else? Is there anything else?”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“What’s the real challenge here &lt;strong&gt;for you?&lt;/strong&gt;”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“Just so I’m clear, How can I help?”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“What else could you do?”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“What was most useful here &lt;strong&gt;for you?&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“What did you learn? What was your most useful insight? What do you want to remember? What did you find most useful about this chat? (reinforce the learning moment by asking them to generate the answer)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“Imagine a miracle occurred overnight - how would you know that things are better? What would be different?”&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;notes&quot;&gt;NOTES&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Leaders and managers are often too ‘busy’ to invest time in helping their team members grow. But making individuals become more &lt;strong&gt;self-sufficient&lt;/strong&gt; can help to prevent you from having to jump in and become the bottleneck.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Being busy is no measure of success - quite the contrary. &lt;strong&gt;Being busy is a form of laziness&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Coaching is ultimately about &lt;strong&gt;helping others&lt;/strong&gt; and unlocking their potential.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Coaching is an &lt;strong&gt;essential leadership behaviour&lt;/strong&gt;. Leaders who can coach are the foundation of a strong, 21st century organizational culture.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Coaching for performance differs from coaching for development. The difference between focussing on &amp;amp;&amp;amp;&lt;strong&gt;putting out the fire&lt;/strong&gt; and focussing on &lt;strong&gt;the person putting out the fire&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You want people that you interact with to be engaged, not in retreat&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Don’t dive in&lt;/strong&gt; and fill the silence!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Increase the &lt;a href=&quot;https://www.growthcoaching.com.au/articles-new/4-ways-to-build-safety-in-the-coaching-relationship?country=au&quot;&gt;TERA&lt;/a&gt; quotient&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Restrain yourself from being the &lt;strong&gt;Advice Monster&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The Drama Triangle&lt;/strong&gt; - Victim, Persecutor, Rescuer.  Each is an ineffective state to be in and can lead to the ‘working-too-hard’ habit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rescuers feel like they are helping but actually are &lt;strong&gt;limiting opportunities&lt;/strong&gt; for others to expand their potential.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stay curious and listen to the answer! Less advice - &lt;strong&gt;more curiosity!&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Avoid TBUs!&lt;/strong&gt; True But Useless phrases.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">COACHING QUESTIONS</summary></entry><entry><title type="html">6 Myths of Product Development</title><link href="http://localhost:4000/Six-Myths-of-Product-Development-copy/" rel="alternate" type="text/html" title="6 Myths of Product Development" /><published>2020-10-19T00:00:00+01:00</published><updated>2020-10-19T00:00:00+01:00</updated><id>http://localhost:4000/ Six Myths of Product Development copy</id><content type="html" xml:base="http://localhost:4000/Six-Myths-of-Product-Development-copy/">&lt;p&gt;Link to article –&amp;gt; &lt;a href=&quot;https://hbr.org/2012/05/six-myths-of-product-development&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Product development is not analogous to manufacturing&lt;/strong&gt; - tasks are (mostly) highly variable and not predictable. Adopting a factory approach to product development is counter-productive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Product quality decreases when resource utilisation is pushed close to 100% by management. &lt;strong&gt;Managers don’t appreciate the negative impact of high utilisation&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;High utilisation leads to queues which affect economic performance. Due to the nature of the work, it is difficult to observe queues and product work inventory - there are no physical signs.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Better to provide a &lt;strong&gt;capacity buffer&lt;/strong&gt; in processes that are highly variable - e.g. Google 20% days. Easy to say, not so easy to implement!  Better to target teams and managers on productive outcome rather than high resource utilisation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A &lt;strong&gt;reduction in active work&lt;/strong&gt; can help to sharpen focus, as can &lt;strong&gt;making WIP visible&lt;/strong&gt;. &lt;strong&gt;Reducing batch size&lt;/strong&gt; cuts WIP and speeds up feedback which improves cycle time, quality and efficiency.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Batch size should strike a good balance between &lt;strong&gt;transaction costs and holding costs&lt;/strong&gt;. In software/product development, this is the difference between large batches of code every few months to testing smaller batches a few times a day.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Product work is highly variable and so trying to obstinately follow a plan is not appropriate. Plans should be treated as &lt;strong&gt;hypotheses&lt;/strong&gt; that are subject to &lt;strong&gt;continuous evolution as we continuously learn&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Less can be more&lt;/strong&gt;. ‘Simplicity is the ultimate sophistication’ - Leonardo da Vinci.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Problem definition is the hardest and most important part of the innovation process. &lt;strong&gt;Invest time here&lt;/strong&gt; as it sets good context for everything that follows.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Users usually want a solution that &lt;strong&gt;‘just works’&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The push to ‘get it right first time’ should be replaced with a &lt;strong&gt;tolerance of ‘getting it wrong first time’&lt;/strong&gt;. Getting it wrong early is cheaper than finding a problem much later on when the cake is almost baked.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Product development is not analogous to manufacturing!&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">Link to article –&amp;gt; here</summary></entry><entry><title type="html">Advanced Pipeline Techniques</title><link href="http://localhost:4000/Advanced-Pipeline-Techniques/" rel="alternate" type="text/html" title="Advanced Pipeline Techniques" /><published>2020-06-01T00:00:00+01:00</published><updated>2020-06-01T00:00:00+01:00</updated><id>http://localhost:4000/Advanced Pipeline Techniques</id><content type="html" xml:base="http://localhost:4000/Advanced-Pipeline-Techniques/">&lt;p&gt;Jez Humble and Dave Farley’s ‘Continuous Delivery’ book first introduced me to many of the concepts around Lean IT, continuous integration and the deployment pipeline. It remains a permanent fixture on my office desk and I dip into it regularly, both for inspiration and for pointers on how to tackle specific challenges. Dave Farley has been quite active on Twitter recently (and &lt;a href=&quot;https://www.youtube.com/channel/UCCfqyGl3nq_V0bo64CjZh8g&quot;&gt;YouTube&lt;/a&gt;) and it was his feed where I saw this ‘Advanced Deployment Pipeline Techniques’ masterclass advertised. Without much hesitation, I enrolled myself and two of my team on to the course.&lt;/p&gt;

&lt;p&gt;This one day course, delivered live online, consisted of four 60-90 minute sessions, each focusing on a particular Continuous Delivery theme/topic. At the start of the day, Dave asked the participants what specifically they were hoping to get out of the course and used our answers to inform some of the day’s topics.&lt;/p&gt;

&lt;p&gt;For us, the topics chosen were:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;CD pipeline fundamentals&lt;/li&gt;
  &lt;li&gt;The anatomy of the CD pipeline&lt;/li&gt;
  &lt;li&gt;Infrastructure as Code and the pipeline&lt;/li&gt;
  &lt;li&gt;Managing data as part of the pipeline&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Items 3 and 4 were/are top of my list of topics to learn more about and where I need to focus some attention in my current role, so I was very glad that they were included.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;my-3-main-takeaways&quot;&gt;My 3 Main Takeaways&lt;/h4&gt;
&lt;p&gt;There was a lot of content to go through during the sessions and I’m still reading through my notes and the shared course slides. But the three things that really stuck with me from the course were as follows.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h5 id=&quot;the-cd-pipeline-as-an-evaluation-machine&quot;&gt;The CD Pipeline as an Evaluation Machine&lt;/h5&gt;

&lt;p&gt;A ‘Pipeline’ can be quite an abstract concept and in my experience, the term means different things to different people. To an engineer on my team, it’s a groovy script file. To a delivery manager it’s the automated deployment process.&lt;/p&gt;

&lt;p&gt;I really liked Dave’s description of the pipeline as an &lt;strong&gt;‘evaluation machine’&lt;/strong&gt;, which we use to test whether or not our release candidates are production ready.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;blog-image&quot; src=&quot;https://robertdpowell.github.io/rp_blog/img/evaluationmachine.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We pump our release candidates into one end of this evaluation machine, and it quickly tells us whether or not we have a viable unit of change that can continue on the path to production.&lt;/p&gt;

&lt;p&gt;This serves as a simple, clear and easily digestable representation of a CD pipeline and I expect I’ll use this in the future to help explain what the pipeline is at 20,000 feet.&lt;/p&gt;

&lt;p&gt;As an ambition, the ‘evaluation machine’ should run in &amp;lt; 5 mins and give us an 80% confidence level in the release candidate. As a whole, the deployment pipeline should run in under 1 hour and therefore it should be possible to trigger it multiple times per day. 
The value of getting to a releasable outcome multiple times a day is so high that we should be doing whatever it takes to achieve it!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h5 id=&quot;the-cd-pipeline-scope&quot;&gt;The CD Pipeline Scope&lt;/h5&gt;

&lt;p&gt;What is the unit of work that we should push through the pipeline? A feature? All output from one delivery team? A microservice? The whole system? It might indeed be all of these things, but the important factor to consider is that the unit of work is &lt;strong&gt;independently deployable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;blog-image&quot; src=&quot;https://robertdpowell.github.io/rp_blog/img/deploymentscope.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As such, we shoudn’t be deploying our unit of work without any dependent systems or services that our change needs to be tested against. This touches on the topic of systems coupling and dependency management. While monolithic applications have a bad reputation, from a deployment pipeline perspective they have some advantages as we don’t need to worry ourselves with the dependency management challenge. We touched on the topic of bounded contexts and it’s clear that architecture and systems coupling can act as a contraint or enabler for our continuous delivery efforts.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h5 id=&quot;a-cd-pipeline-for-your-cd-pipeline&quot;&gt;A CD Pipeline for your CD Pipeline&lt;/h5&gt;

&lt;p&gt;Our pipeline itself can be considered a product or service to which we should also apply the principles of Continuous Delivery. As such, we should be storing all pipeline artefacts in version control (source code, config, infra scripts). At any point in time, we should be able to determine which version of our pipeline was used to handle a specific release candidate and we should be able to recreate our pipeline infrastructure from code. And of course, changes we make to the CD pipeline are committed frequently, run against tests in our ‘evalution machine’ and our pipeline engineering team get fast feedback as to whether or not the release candidate is worthy to continue on its journey to production.&lt;/p&gt;</content><summary type="html">Jez Humble and Dave Farley’s ‘Continuous Delivery’ book first introduced me to many of the concepts around Lean IT, continuous integration and the deployment pipeline. It remains a permanent fixture on my office desk and I dip into it regularly, both for inspiration and for pointers on how to tackle specific challenges. Dave Farley has been quite active on Twitter recently (and YouTube) and it was his feed where I saw this ‘Advanced Deployment Pipeline Techniques’ masterclass advertised. Without much hesitation, I enrolled myself and two of my team on to the course.</summary></entry></feed>
